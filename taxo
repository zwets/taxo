#!/bin/sh
#
#  taxo - Query the taxonomy database
#  Copyright (C) 2017  Marco van Zwetselaar <io@zwets.it>
#
#  This program is free software: you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation, either version 3 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
#  Home: http://github.com/zwets/taxo

# Lookup the scientific name for numeric TAXID
taxid_sciname() {
    taxo-db "SELECT name FROM Names JOIN NameClass USING (name_class_id)
             WHERE tax_id = $1 AND name_class_name = 'scientific name';"
}

# Args: $1=TAXID [$2=anything]; when $2 is present, recurse upward to print all ancestors
lookup_taxid() {
    local NODE_LINE="$(taxo-db "SELECT * FROM SciNamesView WHERE tax_id = $1;")"
    [ -n "$NODE_LINE" ] || return
    if [ $# -eq 2 ]; then    # recurse up to root first
        local PARENT="$(field 4 "$NODE_LINE")"
        [ $PARENT -eq 1 ] || lookup_taxid $PARENT $2
    fi
    printf "$PRINTFMT" "$1" "$(field 2 "$NODE_LINE")" "$(field 3 "$NODE_LINE")"
}

# Exit this script with an error message on stderr
err_exit() {
    echo "$(basename "$0"): $*" >&2
    exit 1
}

# Show usage information and exit
usage_exit() {
    echo "
Usage: $(basename $0) [OPTIONS] TAXID|NAME|- ... 

  Retrieve taxonomy information from a local copy of the taxonomy database.

  Lookup the taxon for each numeric TAXID.  For each non-numeric NAME, find
  all taxons whose scientific names contain NAME in part or in whole.  When
  the argument is '-' read TAXIDs and NAMEs from stdin.

  Options
   -x, --extended  Perform extended name search and produce extended output
   -h, --help      This information

  This tool uses at its backend the taxo-db tool.  See 'taxo-db --help'.
" >&2
    exit ${1:-1}
}

# Parse options

EXTENDED=0
while [ $# -ne 0 -a "$(expr "$1" : '\(.\)..*')" = "-" ]; do
    case $1 in
    -x|--extended)
        EXTENDED=1
        ;;
    -h|--help)
        usage_exit 0
        ;;
    *) usage_exit
        ;;
    esac
    shift
done

# Check arguments

[ $# -ne 0 ] || usage_exit

# Locate the taxo-db backend

TAXO_DB="$(which taxo-db 2>/dev/null)"
[ -n "$TAXO_DB" ] || TAXO_DB="$(dirname "$0")/taxo-db"
[ -x "$TAXO_DB" ] || err_exit "cannot find taxo-db"

# Parse arguments, piping them into taxo-db

if [ "$1" = "-" ]; then
    cat
else
    while [ $# -ne 0 ]; do
        echo "$1"
        shift
    done
fi | awk -b -O -v EXTENDED="$EXTENDED" -v TAXO_DB="$TAXO_DB" -e '
BEGIN {
    FS="\t"
}
END {
    close(TAXO_DB)
}
function find_taxon(tax_id) {
    if (!EXTENDED)
        printf "SELECT tax_id, rank_name, sci_name FROM SciNamesView WHERE tax_id = %d;\n", tax_id | TAXO_DB
    else
        printf "SELECT * FROM Nodes NATURAL JOIN Names NATURAL JOIN NameClass NATURAL JOIN Ranks NATURAL JOIN Citations WHERE name_class_name = \"scientific name\" AND tax_id = %d;\n", tax_id | TAXO_DB
}
function search_name(name) {
    if (!EXTENDED)
        printf "SELECT tax_id, rank_name, sci_name FROM SciNamesView WHERE sci_name LIKE \"%%%s%%\";\n", name | TAXO_DB
    else
        printf "SELECT * FROM Names NATURAL JOIN NameClass WHERE name LIKE \"%%%s%%\" ORDER BY tax_id;\n", name | TAXO_DB
}
/^ *[0-9]+$/   { find_taxon($0) }
/^ *[^0-9]/    { search_name($0) }
'

# vim: sts=4:sw=4:ai:si:et
